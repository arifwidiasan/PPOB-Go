basePath: /v1
definitions:
  docs.CreateProductType:
    properties:
      name:
        example: Pulsa
        type: string
    type: object
  docs.CreateProductTypeFail:
    properties:
      messages:
        example: error insert product type
        type: string
    type: object
  docs.CreateProductTypeSuccess:
    properties:
      messages:
        example: success
        type: string
      product_type_name:
        example: Pulsa
        type: string
    type: object
  docs.LoginAdminSuccess:
    properties:
      messages:
        example: success
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTQyNzA2OTAsImlkIjoxLCJ1c2VybmFtZSI6ImFkbWluIn0.9Qif8_Ug6Uy_oxDXIuIui3nepCPFc1jJ6mO6wEhiuHE
        type: string
    type: object
  docs.NewAdminLogin:
    properties:
      password:
        example: admin
        type: string
      username:
        example: admin123
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Documentation of UPay API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: UPay API
  version: "2.0"
paths:
  /admin/login:
    post:
      consumes:
      - application/json
      description: login admin to get jwt token.
      parameters:
      - description: JSON username and user_pass
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/docs.NewAdminLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.LoginAdminSuccess'
        "401":
          description: unauthorized
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Login Admin.
      tags:
      - Admin
  /product_types:
    post:
      consumes:
      - application/json
      description: create new product type with name.
      parameters:
      - description: JSON name
        in: body
        name: product_type
        required: true
        schema:
          $ref: '#/definitions/docs.CreateProductType'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/docs.CreateProductTypeSuccess'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.CreateProductTypeFail'
      summary: Create New Product Type.
      tags:
      - Product Type
schemes:
- http
swagger: "2.0"
